<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:sharding="http://shardingsphere.apache.org/schema/shardingsphere/sharding"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd http://shardingsphere.apache.org/schema/shardingsphere/sharding http://shardingsphere.apache.org/schema/shardingsphere/sharding/sharding.xsd">

    <!-- 1.使用druid定义数据源 -->
    <bean id="dataSource0" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="url" value="${jdbc.druid.url}"/>
        <property name="username" value="${jdbc.druid.user}"/>
        <property name="password" value="${jdbc.druid.password}"/>
        <property name="filters" value="${jdbc.druid.filters}"/>
        <property name="maxActive" value="${jdbc.druid.maxActive}"/>
        <property name="initialSize" value="${jdbc.druid.initialSize}"/>
        <property name="maxWait" value="${jdbc.druid.maxWait}"/>
        <property name="minIdle" value="${jdbc.druid.minIdle}"/>
        <property name="timeBetweenEvictionRunsMillis" value="${jdbc.druid.timeBetweenEvictionRunsMillis}"/>
        <property name="minEvictableIdleTimeMillis" value="${jdbc.druid.minEvictableIdleTimeMillis}"/>
        <property name="validationQuery" value="${jdbc.druid.validationQuery}"/>
        <property name="testWhileIdle" value="${jdbc.druid.testWhileIdle}"/>
        <property name="testOnBorrow" value="${jdbc.druid.testOnBorrow}"/>
        <property name="testOnReturn" value="${jdbc.druid.testOnReturn}"/>
        <property name="poolPreparedStatements" value="${jdbc.druid.poolPreparedStatements}"/>
        <property name="maxOpenPreparedStatements" value="${jdbc.druid.maxOpenPreparedStatements}"/>
    </bean>

    <bean id="dataSource1" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="url" value="${jdbc.druid.url2}"/>
        <property name="username" value="${jdbc.druid.user}"/>
        <property name="password" value="${jdbc.druid.password}"/>
        <property name="filters" value="${jdbc.druid.filters}"/>
        <property name="maxActive" value="${jdbc.druid.maxActive}"/>
        <property name="initialSize" value="${jdbc.druid.initialSize}"/>
        <property name="maxWait" value="${jdbc.druid.maxWait}"/>
        <property name="minIdle" value="${jdbc.druid.minIdle}"/>
        <property name="timeBetweenEvictionRunsMillis" value="${jdbc.druid.timeBetweenEvictionRunsMillis}"/>
        <property name="minEvictableIdleTimeMillis" value="${jdbc.druid.minEvictableIdleTimeMillis}"/>
        <property name="validationQuery" value="${jdbc.druid.validationQuery}"/>
        <property name="testWhileIdle" value="${jdbc.druid.testWhileIdle}"/>
        <property name="testOnBorrow" value="${jdbc.druid.testOnBorrow}"/>
        <property name="testOnReturn" value="${jdbc.druid.testOnReturn}"/>
        <property name="poolPreparedStatements" value="${jdbc.druid.poolPreparedStatements}"/>
        <property name="maxOpenPreparedStatements" value="${jdbc.druid.maxOpenPreparedStatements}"/>
    </bean>

    <!-- 约定大于配置 -->
    <!-- 2.配置SqlSessionFactory对象 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 注入数据库连接池 -->
        <property name="dataSource" ref="shardingDataSource" />
        <!-- 配置MyBatis全局配置文件：mybatis-config.xml -->
        <property name="configLocation" value="classpath:META-INF/mybatis/mybatis-config.xml" />
        <!-- 扫描entity包 使用别名, 多个路径使用分号进行分隔 -->
        <property name="typeAliasesPackage" value="com.xujiangjun.example.dao.model" />
        <!-- 扫描sql配置文件：mapper需要的xml文件 -->
        <property name="mapperLocations" value="classpath:META-INF/mybatis/mapper/*.xml" />
        <property name="plugins">
            <array>
                <bean class="com.github.pagehelper.PageInterceptor">
                    <property name="properties">
                        <value>
                            helperDialect=mysql
                            reasonable=true
                            supportMethodsArguments=true
                            autoRuntimeDialect=true
                        </value>
                    </property>
                </bean>
            </array>
        </property>
    </bean>

    <!-- 3.配置扫描Dao接口包，动态实现Dao接口，注入到spring容器中 -->
    <bean class="tk.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 注入sqlSessionFactory, 注意这里用value而不是ref -->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
        <!-- 给出扫描Dao接口包 -->
        <property name="basePackage" value="com.xujiangjun.example.dao.mapper" />
        <!-- 通过注解扫描Dao接口包, 可参考saint项目, 加上可以方便IDE识别Spring的Bean -->
        <property name="annotationClass" value="org.springframework.stereotype.Repository"/>
    </bean>

    <sharding:standard-strategy id="dbShardingStrategy" sharding-column="id"
                                precise-algorithm-ref="dbShardingAlgorithm" range-algorithm-ref=""/>
    <sharding:standard-strategy id="tblShardingStrategy" sharding-column="id"
                                precise-algorithm-ref="tblShardingAlgorithm" range-algorithm-ref=""/>
    <!--<sharding:inline-strategy id="dbShardingStrategy" sharding-column="id" algorithm-expression="dataSource$->{id % 2}"/>-->
    <!--<sharding:inline-strategy id="tblShardingStrategy" sharding-column="id" algorithm-expression="sharding_tbl_$->{id % 2}"/>-->
    <!--<sharding:key-generator id="exampleKeyGenerator" column="id" type="SNOWFLAKE"/>-->
    <sharding:data-source id="shardingDataSource">
        <sharding:sharding-rule data-source-names="dataSource0, dataSource1">
            <sharding:table-rules>
                <sharding:table-rule logic-table="sharding_tbl" actual-data-nodes="dataSource$->{0..1}.sharding_tbl_$->{0..3}"
                                     database-strategy-ref="dbShardingStrategy" table-strategy-ref="tblShardingStrategy"/>
                                     <!--key-generator-ref="exampleKeyGenerator"-->
            </sharding:table-rules>
            <!--<sharding:broadcast-table-rules>-->
                <!--<sharding:broadcast-table-rule table="c_param_config"/>-->
            <!--</sharding:broadcast-table-rules>-->
        </sharding:sharding-rule>
        <!--<sharding:props>-->
            <!--<prop key="sql.show">true</prop>-->
        <!--</sharding:props>-->
    </sharding:data-source>
</beans>